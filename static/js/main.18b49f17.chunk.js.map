{"version":3,"sources":["Components/Header.js","Components/ButtonBar.js","modules/monthsList.js","Components/Comic.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","handleHoverOff","e","target","blur","className","onMouseLeave","this","href","rel","Component","ButtonBar","props","randomComic","firstComic","latestComic","previousComic","nextComic","onClick","months","Comic","overlay","document","getElementsByClassName","console","log","style","display","key","latestNum","comicNum","title","url","transcript","year","month","day","bonusText","dateTime","parseInt","tabIndex","handleClick","onKeyPress","handleEnter","src","alt","Footer","App","componentDidMount","loadComic","axios","method","dataResponse","params","reqUrl","xmlToJSON","useCache","then","response","currentComic","push","data","setState","comic","currentComicNum","num","state","Math","floor","random","map","img","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.18b49f17.chunk.js","sourcesContent":["// Header.js\r\nimport React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    handleHoverOff = (e) => {\r\n        e.target.blur();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <header className=\"flexContainer\">\r\n                    <h1>xkcd</h1>\r\n                    <p>comics by: <a onMouseLeave={this.handleHoverOff} href=\"https://twitter.com/xkcd?lang=en\" target=\"_blank\" rel=\"noopener noreferrer\">Randall Patrick Munroe</a></p>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","// ButtonBar.js\r\nimport React, { Component } from 'react';\r\n\r\nclass ButtonBar extends Component {\r\n    handleHoverOff = (e) => {\r\n        e.target.blur();\r\n    }\r\n\r\n    render(){   \r\n        const { randomComic, firstComic, latestComic, previousComic, nextComic } = this.props;\r\n\r\n        return(\r\n            <div className=\"buttonBar\">\r\n                <button onClick={randomComic} onMouseLeave={this.handleHoverOff}>Random</button>\r\n                <button onClick={firstComic} onMouseLeave={this.handleHoverOff}>First</button>\r\n                <button onClick={latestComic} onMouseLeave={this.handleHoverOff}>Latest</button>\r\n                <button onClick={previousComic} onMouseLeave={this.handleHoverOff}>Prev</button>\r\n                <button onClick={nextComic} onMouseLeave={this.handleHoverOff}>Next</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ButtonBar;","// monthsList.js\r\n\r\nconst months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n];\r\n\r\nexport default months;","// Comic.js\r\nimport React,{ Component } from 'react';\r\nimport months from '../modules/monthsList.js';\r\n\r\nclass Comic  extends Component {\r\n\r\n    // display overlay with its bonus text on mouse click\r\n    handleClick() {\r\n        const overlay = document.getElementsByClassName('overlay');\r\n        console.log(overlay[0].style.display);\r\n        return(overlay[0].style.display === \"\" ? overlay[0].style.display = \"block\" : overlay[0].style.display = \"\");\r\n    }\r\n\r\n    // display overlay with its bonus text on \"Enter\" key, accessibilty\r\n    handleEnter(e) {\r\n        if(e.key === 'Enter') {\r\n            const overlay = document.getElementsByClassName('overlay');\r\n            console.log(overlay[0].style.display);\r\n            return(overlay[0].style.display === \"\" ? overlay[0].style.display = \"block\" : overlay[0].style.display = \"\");\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {latestNum, comicNum, title, url, transcript, year, month, day, bonusText} = this.props\r\n        return(\r\n            <div className=\"displayComic\" key={comicNum}>\r\n                {comicNum === latestNum ? <h2>Latest Comic: #{comicNum}</h2> : <h2>Comic: #{comicNum}</h2>}\r\n                <p><time dateTime={`${year}-${month}-${day}`}>{months[parseInt(month) - 1]} {day}, {year}</time></p>\r\n                <h3>{title}</h3>\r\n                <div className=\"imageContainer\" tabIndex='0' onClick={this.handleClick} onKeyPress={this.handleEnter}>\r\n                    {transcript !== \"\" ? <img src={url} alt={transcript}></img> : <img src={url} alt=\"A Comic by Randall Patrick Munroe. Transcript unavailable at this time\"></img> }\r\n                    <div className=\"overlay\">\r\n                        <p>{bonusText}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n} \r\n\r\nexport default Comic;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    handleHoverOff = (e) => {\r\n        e.target.blur();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"wrapper\">\r\n                <footer>\r\n                    <p>\r\n                        Â© 2020 \r\n                        <a \r\n                        onMouseLeave={this.handleHoverOff}\r\n                        href=\"https://github.com/awsclemens\" \r\n                        target=\"_blank\" \r\n                        rel=\"noopener noreferrer\"> Aaron W.S. Clemens \r\n                        </a> || \r\n                        <a \r\n                        onMouseLeave={this.handleHoverOff}\r\n                        href=\"https://junocollege.com/\" \r\n                        target=\"_blank\" \r\n                        rel=\"noopener noreferrer\"> Juno College\r\n                        </a>\r\n                    </p>\r\n                </footer>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","// App.js\n\n// imports\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Header from './Components/Header.js';\nimport ButtonBar from './Components/ButtonBar.js'\nimport Comic from './Components/Comic.js'\nimport Footer from './Components/Footer.js'\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      comic: [],\n      latestNum: 0,\n      currentComicNum: 0,\n    }\n  }\n\n  componentDidMount= () => {\n    this.loadComic('');\n  }\n  \n  loadComic = (comicNum) => {\n    axios({\n      method: 'GET',\n      url: 'http://proxy.hackeryou.com',\n      dataResponse: 'json',\n      params: {\n          reqUrl: `http://xkcd.com/${comicNum}info.0.json`,\n          xmlToJSON: false,\n          useCache: false\n      }\n    }).then((response) => {\n      const currentComic = [];\n      currentComic.push(response.data);\n      // update state\n      this.setState({\n        comic: currentComic,\n        currentComicNum: currentComic[0].num,\n        // latestNum: currentComic[0].num,\n      });\n      if (this.state.latestNum === 0){\n        this.setState({\n          latestNum: currentComic[0].num,\n        })\n      };\n      console.log('current comic', this.state.comic);\n      console.log('current comic #:',this.state.currentComicNum);\n      console.log('latest num: ',this.state.latestNum);\n    });\n  }\n\n  randomComic = () => {\n    const comicNum = Math.floor(Math.random() * this.state.latestNum) + 1;\n    return (`${comicNum}/`);\n  }\n\n  previousComic = () => {\n    return(this.state.currentComicNum > 1 ? `${this.state.currentComicNum - 1}/` : '1/');\n  }\n\n  nextComic = () => {\n    return(this.state.currentComicNum < this.state.latestNum ? `${this.state.currentComicNum + 1}/` : `${this.state.latestNum}/`);\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"wrapper\">\n          <main>\n            <ButtonBar\n            randomComic={() => this.loadComic(this.randomComic())}\n            firstComic={() => this.loadComic('1/')}\n            latestComic={() => this.loadComic('')}\n            previousComic={() => this.loadComic(this.previousComic())}\n            nextComic={() => this.loadComic(this.nextComic())}\n            />\n            {this.state.comic.map((comic) => {\n              return (\n                <Comic \n                key={comic.num}\n                latestNum={this.state.latestNum}\n                comicNum={comic.num}\n                title={comic.title}\n                url={comic.img}\n                transcript={comic.transcript}\n                year={comic.year}\n                month={comic.month}\n                day={comic.day}\n                bonusText={comic.alt}\n                />\n              )\n            })}\n            <ButtonBar\n            randomComic={() => this.loadComic(this.randomComic())}\n            firstComic={() => this.loadComic('1/')}\n            latestComic={() => this.loadComic('')}\n            previousComic={() => this.loadComic(this.previousComic())}\n            nextComic={() => this.loadComic(this.nextComic())}\n            />\n          </main>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}