{"version":3,"sources":["modules/firebase.js","Components/Header.js","modules/hideShow.js","Components/RecentlyViewed.js","Components/SearchBar.js","Components/ButtonBar.js","modules/monthsList.js","Components/Comic.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Header","handleHoverOff","e","target","blur","className","onMouseLeave","this","href","rel","Component","hideShow","recentList","document","getElementsByClassName","screenDark","classList","toggle","RecentlyViewed","handleClick","mainFocus","listFocus","i","length","setAttribute","selectComic","comicNum","props","comicSelect","newArray","recentArray","push","Fragment","tabIndex","aria-label","onClick","aria-hidden","map","comic","key","recentComic","num","title","SearchBar","handleChange","setState","userInput","value","openList","state","id","onSubmit","numberSearch","htmlFor","required","type","name","min","max","maxNum","onChange","ButtonBar","randomComic","firstComic","latestComic","previousComic","nextComic","months","Comic","overlay","console","log","style","display","latestNum","url","transcript","year","month","day","bonusText","dateTime","parseInt","onKeyPress","handleEnter","src","alt","Footer","App","componentDidMount","loadComic","database","ref","on","response","newState","data","val","recentComics","axios","method","dataResponse","params","reqUrl","xmlToJSON","useCache","then","currentComic","currentComicNum","comicRemove","child","remove","preventDefault","getElementById","reset","Math","floor","random","img","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.72eb87d9.chunk.js","sourcesContent":["// firebase.js\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\n// My web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBLZh-Oee3mkiDCJe6f5PuWeBJjshHBg8A\",\r\n    authDomain: \"aaronclemensprojectfive.firebaseapp.com\",\r\n    databaseURL: \"https://aaronclemensprojectfive.firebaseio.com\",\r\n    projectId: \"aaronclemensprojectfive\",\r\n    storageBucket: \"aaronclemensprojectfive.appspot.com\",\r\n    messagingSenderId: \"680980271864\",\r\n    appId: \"1:680980271864:web:34a33bf3a0935d2e3de10d\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","// Header.js\r\nimport React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    // remove focus( and therefore hover effect) from links after clicking (it would normally persist)\r\n    handleHoverOff = (e) => {\r\n        e.target.blur();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <header className=\"flexContainer\">\r\n                    <h1>xkcd</h1>\r\n                    <p>comics by: <a className={'mainFocus'} onMouseLeave={this.handleHoverOff} href=\"https://twitter.com/xkcd?lang=en\" target=\"_blank\" rel=\"noopener noreferrer\">Randall Patrick Munroe</a></p>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","// hideShow.js\r\n\r\nconst hideShow = () => {\r\n    const recentList = document.getElementsByClassName('recentlyViewed');\r\n    const screenDark = document.getElementsByClassName('screenDark');\r\n    // changing viewed or hidden based on className\r\n    recentList[0].classList.toggle('recentlyViewedHidden');\r\n    recentList[0].classList.toggle('recentlyViewedShow');\r\n    screenDark[0].classList.toggle('screenDarkHidden');\r\n    screenDark[0].classList.toggle('screenDarkShow');\r\n}\r\n\r\nexport default hideShow;","// RecentlyViewed.js\r\nimport React, { Component } from 'react';\r\nimport hideShow from '../modules/hideShow.js'\r\n\r\n\r\nclass RecentlyViewed extends Component { \r\n\r\n    // hide recently viewed list and screen dark on button click, remove its tab indexing and add back tab indexing to main focus\r\n    handleClick = () => {\r\n        // closes the recently viewed comics list\r\n        hideShow();\r\n        // return tab indexing to main focus\r\n        const mainFocus = document.getElementsByClassName('mainFocus');\r\n        const listFocus = document.getElementsByClassName('listFocus');\r\n        for ( let i = 0; i < mainFocus.length; i++) {\r\n            mainFocus[i].setAttribute('tabindex', '1');\r\n        }\r\n        // remove tab indexing from list focus\r\n        for ( let i = 0; i < listFocus.length; i++) {\r\n            listFocus[i].setAttribute('tabindex', '-1');\r\n        }\r\n    }\r\n\r\n    // allows user to click on a recently viewed comic and then hide recently viewed list and screen dark, remove its tab indexing and add back tab indexing to main focus, AND display this comic to the main page\r\n    selectComic = (comicNum) => {\r\n        this.props.comicSelect(`${comicNum}/`);\r\n        this.handleClick();\r\n    }\r\n\r\n    render(){\r\n        // reorder the recently viewed comics so that most recent is at the top of the list down to least recent at the bottom\r\n        const newArray = [...this.props.recentList];\r\n        const recentArray = [];\r\n        for (let i = newArray.length - 1; i >= 0; i--){\r\n            recentArray.push(newArray[i]);\r\n        }\r\n        return(\r\n            <React.Fragment>\r\n                <aside className={'recentlyViewed recentlyViewedHidden'}>\r\n                    <button className={'closeList listFocus'} tabIndex={-1} aria-label={'Close recently viewed list'} onClick={this.handleClick}><i className=\"fas fa-times\" aria-hidden=\"true\"></i></button>\r\n                    <h2>Recently Viewed</h2>\r\n                    <ol className={'recentList'}>\r\n                        {recentArray.map((comic, key) => {\r\n                            return (\r\n                            <li key={key}><button className={'listFocus'} onClick={() => {this.selectComic(comic.recentComic.num)}} tabIndex={-1}>{`${comic.recentComic.title} - `}<span>{`comic#${comic.recentComic.num}`}</span></button></li>\r\n                            );\r\n                        })}\r\n                    </ol>\r\n                </aside>\r\n                <div className={'screenDark screenDarkHidden'}></div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RecentlyViewed;","// SearchBar.js\r\nimport React, { Component } from 'react';\r\nimport hideShow from '../modules/hideShow.js'\r\n\r\nclass SearchBar extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            userInput: \"\",\r\n        }\r\n    }\r\n\r\n    // set the state with all changes to user input in the number input box\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            userInput: e.target.value,\r\n        })\r\n    }\r\n\r\n    // allows user to click on a \"Recently Viewed\" button and then remove main page tab indexing and add tab indexing to list focus, AND slide out the screen dark and recentlyViewed list on top of the main page.\r\n    openList = () => {\r\n        // opens the recently view comics list\r\n        hideShow();\r\n        // remove tab indexing from main focus\r\n        const mainFocus = document.getElementsByClassName('mainFocus');\r\n        const listFocus = document.getElementsByClassName('listFocus');\r\n        for ( let i = 0; i < mainFocus.length; i++) {\r\n            mainFocus[i].setAttribute('tabindex', '-1');\r\n        }\r\n        // add tab indexing to list focus\r\n        for ( let i = 0; i < listFocus.length; i++) {\r\n            listFocus[i].setAttribute('tabindex', '1');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"searchBar\">\r\n                <form id=\"comicNumSearch\" onSubmit={(e) => {this.props.numberSearch(e, this.state.userInput)}}>\r\n                    <label htmlFor=\"comicNum\">Search comic #:</label>\r\n                    <input required type=\"number\" className=\"mainFocus\" id=\"comicNum\" name=\"comicNum\" min=\"1\" max={this.props.maxNum} onChange={this.handleChange}></input>\r\n                </form>\r\n                <button type=\"button\" className=\"mainFocus\" onClick={this.openList}>Recently Viewed</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","// ButtonBar.js\r\nimport React, { Component } from 'react';\r\n\r\n\r\nclass ButtonBar extends Component {\r\n    // remove focus( and therefore hover effect) from button after clicking (it would normally persist)\r\n    handleHoverOff = (e) => {\r\n        e.target.blur();\r\n    }\r\n\r\n    render(){   \r\n        const { randomComic, firstComic, latestComic, previousComic, nextComic } = this.props;\r\n\r\n        return(\r\n            <div className=\"buttonBar\">\r\n                <button type=\"button\" className=\"mainFocus\" onClick={randomComic} onMouseLeave={this.handleHoverOff}>Random</button>\r\n                <button type=\"button\"  className=\"mainFocus\" onClick={firstComic} onMouseLeave={this.handleHoverOff}>First</button>\r\n                <button type=\"button\" className=\"mainFocus\" onClick={latestComic} onMouseLeave={this.handleHoverOff}>Latest</button>\r\n                <button type=\"button\" className=\"mainFocus\" onClick={previousComic} onMouseLeave={this.handleHoverOff}>Prev</button>\r\n                <button type=\"button\" className=\"mainFocus\" onClick={nextComic} onMouseLeave={this.handleHoverOff}>Next</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ButtonBar;","// monthsList.js\r\n\r\nconst months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n];\r\n\r\nexport default months;","// Comic.js\r\nimport React,{ Component } from 'react';\r\nimport months from '../modules/monthsList.js';\r\n\r\nclass Comic  extends Component {\r\n\r\n    // display overlay with its bonus text on mouse click\r\n    handleClick() {\r\n        const overlay = document.getElementsByClassName('overlay');\r\n        console.log(overlay[0].style.display);\r\n        return(overlay[0].style.display === \"\" ? overlay[0].style.display = \"block\" : overlay[0].style.display = \"\");\r\n    }\r\n\r\n    // display overlay with its bonus text on \"Enter\" key, accessibilty\r\n    handleEnter(e) {\r\n        if(e.key === 'Enter') {\r\n            const overlay = document.getElementsByClassName('overlay');\r\n            console.log(overlay[0].style.display);\r\n            return(overlay[0].style.display === \"\" ? overlay[0].style.display = \"block\" : overlay[0].style.display = \"\");\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {latestNum, comicNum, title, url, transcript, year, month, day, bonusText} = this.props\r\n        return(\r\n            <div className=\"displayComic\" key={comicNum}>\r\n                {comicNum === latestNum ? <h2>Latest Comic: #{comicNum}</h2> : <h2>Comic: #{comicNum}</h2>}\r\n                <p><time dateTime={`${year}-${month}-${day}`}>{months[parseInt(month) - 1]} {day}, {year}</time></p>\r\n                <h3>{title}</h3>\r\n                <div className=\"imageContainer mainFocus\" tabIndex='0' onClick={this.handleClick} onKeyPress={this.handleEnter}>\r\n                    {transcript !== \"\" ? <img src={url} alt={transcript}></img> : <img src={url} alt=\"A Comic by Randall Patrick Munroe. Transcript unavailable at this time\"></img> }\r\n                    <div className=\"overlay\">\r\n                        <p>{bonusText}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n} \r\n\r\nexport default Comic;","import React, { Component } from 'react';\r\n\r\n\r\nclass Footer extends Component {\r\n    // remove focus( and therefore hover effect) from links after clicking (it would normally persist)\r\n    handleHoverOff = (e) => {\r\n        e.target.blur();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"wrapper\">\r\n                <footer>\r\n                    <p>\r\n                        © 2020 \r\n                        <a \r\n                        className={'mainFocus'}\r\n                        onMouseLeave={this.handleHoverOff}\r\n                        href=\"https://github.com/awsclemens\" \r\n                        target=\"_blank\" \r\n                        rel=\"noopener noreferrer\"> Aaron W.S. Clemens \r\n                        </a> || \r\n                        <a \r\n                        className={'mainFocus'}\r\n                        onMouseLeave={this.handleHoverOff}\r\n                        href=\"https://junocollege.com/\" \r\n                        target=\"_blank\" \r\n                        rel=\"noopener noreferrer\"> Juno College\r\n                        </a>\r\n                    </p>\r\n                </footer>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","// App.js\r\n\r\n// imports\r\nimport React, { Component } from 'react';\r\nimport firebase from './modules/firebase.js';\r\nimport axios from 'axios';\r\nimport Header from './Components/Header.js';\r\nimport RecentlyViewed from './Components/RecentlyViewed.js'\r\nimport SearchBar from './Components/SearchBar';\r\nimport ButtonBar from './Components/ButtonBar.js';\r\nimport Comic from './Components/Comic.js';\r\nimport Footer from './Components/Footer.js';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      comic: [],\r\n      latestNum: 0,\r\n      currentComicNum: 0,\r\n      recentComics: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.loadComic('');\r\n    // create firebase reference\r\n    const dbRef = firebase.database().ref();\r\n    // listen to the value change in realtime database\r\n    dbRef.on('value', (response) => {\r\n\r\n      const newState = [];\r\n      const data = response.val();\r\n\r\n      for(const key in data) {\r\n        newState.push({\r\n          key: key,\r\n          recentComic: data[key]\r\n        });\r\n      }\r\n\r\n      // update state with recent Comics from firebase\r\n      this.setState({\r\n        recentComics: newState,\r\n      });\r\n    });\r\n  }\r\n\r\n  // axios call to get xkcd comic, by specific comic number, or, if blank, the latest comic\r\n  loadComic = (comicNum) => {\r\n    axios({\r\n      method: 'GET',\r\n      url: 'https://proxy.hackeryou.com',\r\n      dataResponse: 'json',\r\n      params: {\r\n          reqUrl: `https://xkcd.com/${comicNum}info.0.json`,\r\n          xmlToJSON: false,\r\n          useCache: false\r\n      }\r\n    }).then((response) => {\r\n      const currentComic = [];\r\n      currentComic.push(response.data);\r\n      // update state\r\n      this.setState({\r\n        comic: currentComic,\r\n        currentComicNum: currentComic[0].num,\r\n      });\r\n      if (this.state.latestNum === 0){\r\n        this.setState({\r\n          latestNum: currentComic[0].num,\r\n        })\r\n      } else {\r\n        // only adds comic after user loads new comic, not the latest comic displayed on page load\r\n        // if there are already 10 recent comics in state then remove 1st comic from database, before adding the current comic, always keeping 10 recent comic records\r\n        if(this.state.recentComics.length === 10) {\r\n          const comicRemove = this.state.recentComics[0].key;\r\n          const dbRef = firebase.database().ref();\r\n          dbRef.child(comicRemove).remove();\r\n        }\r\n        const dbRef = firebase.database().ref();\r\n        dbRef.push(this.state.comic[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  // search for a comic using comic number provided by user in number input\r\n  numberSearch = (e, userInput) => {\r\n    e.preventDefault();\r\n    this.loadComic(`${userInput}/`);\r\n    document.getElementById('comicNumSearch').reset();\r\n  }\r\n\r\n  // generate random number from 1 to latest comic number and use that random number to search for that comic\r\n  randomComic = () => {\r\n    const comicNum = Math.floor(Math.random() * this.state.latestNum) + 1;\r\n    this.loadComic(`${comicNum}/`);\r\n  }\r\n\r\n  // using the current comic number, subtract 1 (if not the 1st comic) to search for that comic\r\n  previousComic = () => {\r\n    return(this.state.currentComicNum > 1 ? this.loadComic(`${this.state.currentComicNum - 1}/`) : this.loadComic('1/'));\r\n  }\r\n\r\n  // using the current comic number, add 1 (if not the latest comic) to search for that comic\r\n  nextComic = () => {\r\n    return(this.state.currentComicNum < this.state.latestNum ? this.loadComic(`${this.state.currentComicNum + 1}/`) : this.loadComic(`${this.state.latestNum}/`));\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <RecentlyViewed \r\n        recentList={this.state.recentComics}\r\n        comicSelect={this.loadComic}\r\n        />\r\n        <Header />\r\n        <div className=\"wrapper\">\r\n          <main>\r\n            <SearchBar \r\n            maxNum={this.state.latestNum}\r\n            numberSearch={this.numberSearch}\r\n            />\r\n            <ButtonBar\r\n            randomComic={this.randomComic}\r\n            firstComic={() => this.loadComic('1/')}\r\n            latestComic={() => this.loadComic('')}\r\n            previousComic={this.previousComic}\r\n            nextComic={this.nextComic}\r\n            />\r\n            {this.state.comic.map((comic) => {\r\n              return (\r\n                <Comic \r\n                key={comic.num}\r\n                latestNum={this.state.latestNum}\r\n                comicNum={comic.num}\r\n                title={comic.title}\r\n                url={comic.img}\r\n                transcript={comic.transcript}\r\n                year={comic.year}\r\n                month={comic.month}\r\n                day={comic.day}\r\n                bonusText={comic.alt}\r\n                />\r\n              )\r\n            })}\r\n            <ButtonBar\r\n            randomComic={this.randomComic}\r\n            firstComic={() => this.loadComic('1/')}\r\n            latestComic={() => this.loadComic('')}\r\n            previousComic={this.previousComic}\r\n            nextComic={this.nextComic}\r\n            />\r\n          </main>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}